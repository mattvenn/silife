// SPDX-FileCopyrightText: Â© 2021 Uri Shaked <uri@wokwi.com>
// SPDX-License-Identifier: MIT

/* DO NOT EDIT - this is an auto-generated file. */
/* generated by gen_grid.py */

module silife_grid_8x8 (
    input wire reset,
    input wire clk,
    input wire enable,

    /* grid interconnect */
    input wire [7:0] i_n,
    input wire [7:0] i_e,
    input wire [7:0] i_s,
    input wire [7:0] i_w,
    input wire i_ne,
    input wire i_se,
    input wire i_sw,
    input wire i_nw,
    output wire [7:0] o_n,
    output wire [7:0] o_w,
    output wire [7:0] o_s,
    output wire [7:0] o_e,

    /* First port: read/write */
    input  wire [2:0] row_select,
    input  wire [7:0] clear_cells,
    input  wire [7:0] set_cells,
    output wire [7:0] cells,

    /* Second port: read only */
    input  wire [2:0] row_select2,
    output reg  [7:0] cells2,
    input  wire [2:0] history_select
);

  wire [5:0] row_offset = {row_select, 3'b0};
  assign cells = cell_values[row_offset+:8];

  wire [5:0] row_offset2 = {row_select2, 3'b0};

  always @(*) begin
    case (history_select)
      5: cells2 = history5[row_offset2+:8];
      4: cells2 = history4[row_offset2+:8];
      3: cells2 = history3[row_offset2+:8];
      2: cells2 = history2[row_offset2+:8];
      1: cells2 = history1[row_offset2+:8];
      default: cells2 = cell_values[row_offset2+:8];
    endcase
  end

  wire [64-1:0] cell_values;
  wire [64-1:0] history1;
  wire [64-1:0] history2;
  wire [64-1:0] history3;
  wire [64-1:0] history4;
  wire [64-1:0] history5;

  assign o_w[0] = cell_values[0];
  assign o_n[0] = cell_values[0];
  silife_cell cell_0_0 (
      .reset  (reset || (row_select == 0 && clear_cells[0])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 0 && set_cells[0]),
      .nw     (i_nw),
      .n      (i_n[0]),
      .ne     (i_n[1]),
      .e      (cell_values[1]),
      .se     (cell_values[9]),
      .s      (cell_values[8]),
      .sw     (i_w[1]),
      .w      (i_w[0]),
      .out    (cell_values[0]),
      .history({history5[0], history4[0], history3[0], history2[0], history1[0]})
  );

  assign o_n[1] = cell_values[1];
  silife_cell cell_0_1 (
      .reset  (reset || (row_select == 0 && clear_cells[1])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 0 && set_cells[1]),
      .nw     (i_n[0]),
      .n      (i_n[1]),
      .ne     (i_n[2]),
      .e      (cell_values[2]),
      .se     (cell_values[10]),
      .s      (cell_values[9]),
      .sw     (cell_values[8]),
      .w      (cell_values[0]),
      .out    (cell_values[1]),
      .history({history5[1], history4[1], history3[1], history2[1], history1[1]})
  );

  assign o_n[2] = cell_values[2];
  silife_cell cell_0_2 (
      .reset  (reset || (row_select == 0 && clear_cells[2])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 0 && set_cells[2]),
      .nw     (i_n[1]),
      .n      (i_n[2]),
      .ne     (i_n[3]),
      .e      (cell_values[3]),
      .se     (cell_values[11]),
      .s      (cell_values[10]),
      .sw     (cell_values[9]),
      .w      (cell_values[1]),
      .out    (cell_values[2]),
      .history({history5[2], history4[2], history3[2], history2[2], history1[2]})
  );

  assign o_n[3] = cell_values[3];
  silife_cell cell_0_3 (
      .reset  (reset || (row_select == 0 && clear_cells[3])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 0 && set_cells[3]),
      .nw     (i_n[2]),
      .n      (i_n[3]),
      .ne     (i_n[4]),
      .e      (cell_values[4]),
      .se     (cell_values[12]),
      .s      (cell_values[11]),
      .sw     (cell_values[10]),
      .w      (cell_values[2]),
      .out    (cell_values[3]),
      .history({history5[3], history4[3], history3[3], history2[3], history1[3]})
  );

  assign o_n[4] = cell_values[4];
  silife_cell cell_0_4 (
      .reset  (reset || (row_select == 0 && clear_cells[4])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 0 && set_cells[4]),
      .nw     (i_n[3]),
      .n      (i_n[4]),
      .ne     (i_n[5]),
      .e      (cell_values[5]),
      .se     (cell_values[13]),
      .s      (cell_values[12]),
      .sw     (cell_values[11]),
      .w      (cell_values[3]),
      .out    (cell_values[4]),
      .history({history5[4], history4[4], history3[4], history2[4], history1[4]})
  );

  assign o_n[5] = cell_values[5];
  silife_cell cell_0_5 (
      .reset  (reset || (row_select == 0 && clear_cells[5])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 0 && set_cells[5]),
      .nw     (i_n[4]),
      .n      (i_n[5]),
      .ne     (i_n[6]),
      .e      (cell_values[6]),
      .se     (cell_values[14]),
      .s      (cell_values[13]),
      .sw     (cell_values[12]),
      .w      (cell_values[4]),
      .out    (cell_values[5]),
      .history({history5[5], history4[5], history3[5], history2[5], history1[5]})
  );

  assign o_n[6] = cell_values[6];
  silife_cell cell_0_6 (
      .reset  (reset || (row_select == 0 && clear_cells[6])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 0 && set_cells[6]),
      .nw     (i_n[5]),
      .n      (i_n[6]),
      .ne     (i_n[7]),
      .e      (cell_values[7]),
      .se     (cell_values[15]),
      .s      (cell_values[14]),
      .sw     (cell_values[13]),
      .w      (cell_values[5]),
      .out    (cell_values[6]),
      .history({history5[6], history4[6], history3[6], history2[6], history1[6]})
  );

  assign o_e[0] = cell_values[7];
  assign o_n[7] = cell_values[7];
  silife_cell cell_0_7 (
      .reset  (reset || (row_select == 0 && clear_cells[7])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 0 && set_cells[7]),
      .nw     (i_n[6]),
      .n      (i_n[7]),
      .ne     (i_ne),
      .e      (i_e[0]),
      .se     (i_e[1]),
      .s      (cell_values[15]),
      .sw     (cell_values[14]),
      .w      (cell_values[6]),
      .out    (cell_values[7]),
      .history({history5[7], history4[7], history3[7], history2[7], history1[7]})
  );

  assign o_w[1] = cell_values[8];
  silife_cell cell_1_0 (
      .reset  (reset || (row_select == 1 && clear_cells[0])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 1 && set_cells[0]),
      .nw     (i_w[0]),
      .n      (cell_values[0]),
      .ne     (cell_values[1]),
      .e      (cell_values[9]),
      .se     (cell_values[17]),
      .s      (cell_values[16]),
      .sw     (i_w[2]),
      .w      (i_w[1]),
      .out    (cell_values[8]),
      .history({history5[8], history4[8], history3[8], history2[8], history1[8]})
  );

  silife_cell cell_1_1 (
      .reset  (reset || (row_select == 1 && clear_cells[1])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 1 && set_cells[1]),
      .nw     (cell_values[0]),
      .n      (cell_values[1]),
      .ne     (cell_values[2]),
      .e      (cell_values[10]),
      .se     (cell_values[18]),
      .s      (cell_values[17]),
      .sw     (cell_values[16]),
      .w      (cell_values[8]),
      .out    (cell_values[9]),
      .history({history5[9], history4[9], history3[9], history2[9], history1[9]})
  );

  silife_cell cell_1_2 (
      .reset  (reset || (row_select == 1 && clear_cells[2])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 1 && set_cells[2]),
      .nw     (cell_values[1]),
      .n      (cell_values[2]),
      .ne     (cell_values[3]),
      .e      (cell_values[11]),
      .se     (cell_values[19]),
      .s      (cell_values[18]),
      .sw     (cell_values[17]),
      .w      (cell_values[9]),
      .out    (cell_values[10]),
      .history({history5[10], history4[10], history3[10], history2[10], history1[10]})
  );

  silife_cell cell_1_3 (
      .reset  (reset || (row_select == 1 && clear_cells[3])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 1 && set_cells[3]),
      .nw     (cell_values[2]),
      .n      (cell_values[3]),
      .ne     (cell_values[4]),
      .e      (cell_values[12]),
      .se     (cell_values[20]),
      .s      (cell_values[19]),
      .sw     (cell_values[18]),
      .w      (cell_values[10]),
      .out    (cell_values[11]),
      .history({history5[11], history4[11], history3[11], history2[11], history1[11]})
  );

  silife_cell cell_1_4 (
      .reset  (reset || (row_select == 1 && clear_cells[4])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 1 && set_cells[4]),
      .nw     (cell_values[3]),
      .n      (cell_values[4]),
      .ne     (cell_values[5]),
      .e      (cell_values[13]),
      .se     (cell_values[21]),
      .s      (cell_values[20]),
      .sw     (cell_values[19]),
      .w      (cell_values[11]),
      .out    (cell_values[12]),
      .history({history5[12], history4[12], history3[12], history2[12], history1[12]})
  );

  silife_cell cell_1_5 (
      .reset  (reset || (row_select == 1 && clear_cells[5])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 1 && set_cells[5]),
      .nw     (cell_values[4]),
      .n      (cell_values[5]),
      .ne     (cell_values[6]),
      .e      (cell_values[14]),
      .se     (cell_values[22]),
      .s      (cell_values[21]),
      .sw     (cell_values[20]),
      .w      (cell_values[12]),
      .out    (cell_values[13]),
      .history({history5[13], history4[13], history3[13], history2[13], history1[13]})
  );

  silife_cell cell_1_6 (
      .reset  (reset || (row_select == 1 && clear_cells[6])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 1 && set_cells[6]),
      .nw     (cell_values[5]),
      .n      (cell_values[6]),
      .ne     (cell_values[7]),
      .e      (cell_values[15]),
      .se     (cell_values[23]),
      .s      (cell_values[22]),
      .sw     (cell_values[21]),
      .w      (cell_values[13]),
      .out    (cell_values[14]),
      .history({history5[14], history4[14], history3[14], history2[14], history1[14]})
  );

  assign o_e[1] = cell_values[15];
  silife_cell cell_1_7 (
      .reset  (reset || (row_select == 1 && clear_cells[7])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 1 && set_cells[7]),
      .nw     (cell_values[6]),
      .n      (cell_values[7]),
      .ne     (i_e[0]),
      .e      (i_e[1]),
      .se     (i_e[2]),
      .s      (cell_values[23]),
      .sw     (cell_values[22]),
      .w      (cell_values[14]),
      .out    (cell_values[15]),
      .history({history5[15], history4[15], history3[15], history2[15], history1[15]})
  );

  assign o_w[2] = cell_values[16];
  silife_cell cell_2_0 (
      .reset  (reset || (row_select == 2 && clear_cells[0])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 2 && set_cells[0]),
      .nw     (i_w[1]),
      .n      (cell_values[8]),
      .ne     (cell_values[9]),
      .e      (cell_values[17]),
      .se     (cell_values[25]),
      .s      (cell_values[24]),
      .sw     (i_w[3]),
      .w      (i_w[2]),
      .out    (cell_values[16]),
      .history({history5[16], history4[16], history3[16], history2[16], history1[16]})
  );

  silife_cell cell_2_1 (
      .reset  (reset || (row_select == 2 && clear_cells[1])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 2 && set_cells[1]),
      .nw     (cell_values[8]),
      .n      (cell_values[9]),
      .ne     (cell_values[10]),
      .e      (cell_values[18]),
      .se     (cell_values[26]),
      .s      (cell_values[25]),
      .sw     (cell_values[24]),
      .w      (cell_values[16]),
      .out    (cell_values[17]),
      .history({history5[17], history4[17], history3[17], history2[17], history1[17]})
  );

  silife_cell cell_2_2 (
      .reset  (reset || (row_select == 2 && clear_cells[2])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 2 && set_cells[2]),
      .nw     (cell_values[9]),
      .n      (cell_values[10]),
      .ne     (cell_values[11]),
      .e      (cell_values[19]),
      .se     (cell_values[27]),
      .s      (cell_values[26]),
      .sw     (cell_values[25]),
      .w      (cell_values[17]),
      .out    (cell_values[18]),
      .history({history5[18], history4[18], history3[18], history2[18], history1[18]})
  );

  silife_cell cell_2_3 (
      .reset  (reset || (row_select == 2 && clear_cells[3])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 2 && set_cells[3]),
      .nw     (cell_values[10]),
      .n      (cell_values[11]),
      .ne     (cell_values[12]),
      .e      (cell_values[20]),
      .se     (cell_values[28]),
      .s      (cell_values[27]),
      .sw     (cell_values[26]),
      .w      (cell_values[18]),
      .out    (cell_values[19]),
      .history({history5[19], history4[19], history3[19], history2[19], history1[19]})
  );

  silife_cell cell_2_4 (
      .reset  (reset || (row_select == 2 && clear_cells[4])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 2 && set_cells[4]),
      .nw     (cell_values[11]),
      .n      (cell_values[12]),
      .ne     (cell_values[13]),
      .e      (cell_values[21]),
      .se     (cell_values[29]),
      .s      (cell_values[28]),
      .sw     (cell_values[27]),
      .w      (cell_values[19]),
      .out    (cell_values[20]),
      .history({history5[20], history4[20], history3[20], history2[20], history1[20]})
  );

  silife_cell cell_2_5 (
      .reset  (reset || (row_select == 2 && clear_cells[5])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 2 && set_cells[5]),
      .nw     (cell_values[12]),
      .n      (cell_values[13]),
      .ne     (cell_values[14]),
      .e      (cell_values[22]),
      .se     (cell_values[30]),
      .s      (cell_values[29]),
      .sw     (cell_values[28]),
      .w      (cell_values[20]),
      .out    (cell_values[21]),
      .history({history5[21], history4[21], history3[21], history2[21], history1[21]})
  );

  silife_cell cell_2_6 (
      .reset  (reset || (row_select == 2 && clear_cells[6])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 2 && set_cells[6]),
      .nw     (cell_values[13]),
      .n      (cell_values[14]),
      .ne     (cell_values[15]),
      .e      (cell_values[23]),
      .se     (cell_values[31]),
      .s      (cell_values[30]),
      .sw     (cell_values[29]),
      .w      (cell_values[21]),
      .out    (cell_values[22]),
      .history({history5[22], history4[22], history3[22], history2[22], history1[22]})
  );

  assign o_e[2] = cell_values[23];
  silife_cell cell_2_7 (
      .reset  (reset || (row_select == 2 && clear_cells[7])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 2 && set_cells[7]),
      .nw     (cell_values[14]),
      .n      (cell_values[15]),
      .ne     (i_e[1]),
      .e      (i_e[2]),
      .se     (i_e[3]),
      .s      (cell_values[31]),
      .sw     (cell_values[30]),
      .w      (cell_values[22]),
      .out    (cell_values[23]),
      .history({history5[23], history4[23], history3[23], history2[23], history1[23]})
  );

  assign o_w[3] = cell_values[24];
  silife_cell cell_3_0 (
      .reset  (reset || (row_select == 3 && clear_cells[0])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 3 && set_cells[0]),
      .nw     (i_w[2]),
      .n      (cell_values[16]),
      .ne     (cell_values[17]),
      .e      (cell_values[25]),
      .se     (cell_values[33]),
      .s      (cell_values[32]),
      .sw     (i_w[4]),
      .w      (i_w[3]),
      .out    (cell_values[24]),
      .history({history5[24], history4[24], history3[24], history2[24], history1[24]})
  );

  silife_cell cell_3_1 (
      .reset  (reset || (row_select == 3 && clear_cells[1])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 3 && set_cells[1]),
      .nw     (cell_values[16]),
      .n      (cell_values[17]),
      .ne     (cell_values[18]),
      .e      (cell_values[26]),
      .se     (cell_values[34]),
      .s      (cell_values[33]),
      .sw     (cell_values[32]),
      .w      (cell_values[24]),
      .out    (cell_values[25]),
      .history({history5[25], history4[25], history3[25], history2[25], history1[25]})
  );

  silife_cell cell_3_2 (
      .reset  (reset || (row_select == 3 && clear_cells[2])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 3 && set_cells[2]),
      .nw     (cell_values[17]),
      .n      (cell_values[18]),
      .ne     (cell_values[19]),
      .e      (cell_values[27]),
      .se     (cell_values[35]),
      .s      (cell_values[34]),
      .sw     (cell_values[33]),
      .w      (cell_values[25]),
      .out    (cell_values[26]),
      .history({history5[26], history4[26], history3[26], history2[26], history1[26]})
  );

  silife_cell cell_3_3 (
      .reset  (reset || (row_select == 3 && clear_cells[3])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 3 && set_cells[3]),
      .nw     (cell_values[18]),
      .n      (cell_values[19]),
      .ne     (cell_values[20]),
      .e      (cell_values[28]),
      .se     (cell_values[36]),
      .s      (cell_values[35]),
      .sw     (cell_values[34]),
      .w      (cell_values[26]),
      .out    (cell_values[27]),
      .history({history5[27], history4[27], history3[27], history2[27], history1[27]})
  );

  silife_cell cell_3_4 (
      .reset  (reset || (row_select == 3 && clear_cells[4])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 3 && set_cells[4]),
      .nw     (cell_values[19]),
      .n      (cell_values[20]),
      .ne     (cell_values[21]),
      .e      (cell_values[29]),
      .se     (cell_values[37]),
      .s      (cell_values[36]),
      .sw     (cell_values[35]),
      .w      (cell_values[27]),
      .out    (cell_values[28]),
      .history({history5[28], history4[28], history3[28], history2[28], history1[28]})
  );

  silife_cell cell_3_5 (
      .reset  (reset || (row_select == 3 && clear_cells[5])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 3 && set_cells[5]),
      .nw     (cell_values[20]),
      .n      (cell_values[21]),
      .ne     (cell_values[22]),
      .e      (cell_values[30]),
      .se     (cell_values[38]),
      .s      (cell_values[37]),
      .sw     (cell_values[36]),
      .w      (cell_values[28]),
      .out    (cell_values[29]),
      .history({history5[29], history4[29], history3[29], history2[29], history1[29]})
  );

  silife_cell cell_3_6 (
      .reset  (reset || (row_select == 3 && clear_cells[6])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 3 && set_cells[6]),
      .nw     (cell_values[21]),
      .n      (cell_values[22]),
      .ne     (cell_values[23]),
      .e      (cell_values[31]),
      .se     (cell_values[39]),
      .s      (cell_values[38]),
      .sw     (cell_values[37]),
      .w      (cell_values[29]),
      .out    (cell_values[30]),
      .history({history5[30], history4[30], history3[30], history2[30], history1[30]})
  );

  assign o_e[3] = cell_values[31];
  silife_cell cell_3_7 (
      .reset  (reset || (row_select == 3 && clear_cells[7])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 3 && set_cells[7]),
      .nw     (cell_values[22]),
      .n      (cell_values[23]),
      .ne     (i_e[2]),
      .e      (i_e[3]),
      .se     (i_e[4]),
      .s      (cell_values[39]),
      .sw     (cell_values[38]),
      .w      (cell_values[30]),
      .out    (cell_values[31]),
      .history({history5[31], history4[31], history3[31], history2[31], history1[31]})
  );

  assign o_w[4] = cell_values[32];
  silife_cell cell_4_0 (
      .reset  (reset || (row_select == 4 && clear_cells[0])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 4 && set_cells[0]),
      .nw     (i_w[3]),
      .n      (cell_values[24]),
      .ne     (cell_values[25]),
      .e      (cell_values[33]),
      .se     (cell_values[41]),
      .s      (cell_values[40]),
      .sw     (i_w[5]),
      .w      (i_w[4]),
      .out    (cell_values[32]),
      .history({history5[32], history4[32], history3[32], history2[32], history1[32]})
  );

  silife_cell cell_4_1 (
      .reset  (reset || (row_select == 4 && clear_cells[1])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 4 && set_cells[1]),
      .nw     (cell_values[24]),
      .n      (cell_values[25]),
      .ne     (cell_values[26]),
      .e      (cell_values[34]),
      .se     (cell_values[42]),
      .s      (cell_values[41]),
      .sw     (cell_values[40]),
      .w      (cell_values[32]),
      .out    (cell_values[33]),
      .history({history5[33], history4[33], history3[33], history2[33], history1[33]})
  );

  silife_cell cell_4_2 (
      .reset  (reset || (row_select == 4 && clear_cells[2])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 4 && set_cells[2]),
      .nw     (cell_values[25]),
      .n      (cell_values[26]),
      .ne     (cell_values[27]),
      .e      (cell_values[35]),
      .se     (cell_values[43]),
      .s      (cell_values[42]),
      .sw     (cell_values[41]),
      .w      (cell_values[33]),
      .out    (cell_values[34]),
      .history({history5[34], history4[34], history3[34], history2[34], history1[34]})
  );

  silife_cell cell_4_3 (
      .reset  (reset || (row_select == 4 && clear_cells[3])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 4 && set_cells[3]),
      .nw     (cell_values[26]),
      .n      (cell_values[27]),
      .ne     (cell_values[28]),
      .e      (cell_values[36]),
      .se     (cell_values[44]),
      .s      (cell_values[43]),
      .sw     (cell_values[42]),
      .w      (cell_values[34]),
      .out    (cell_values[35]),
      .history({history5[35], history4[35], history3[35], history2[35], history1[35]})
  );

  silife_cell cell_4_4 (
      .reset  (reset || (row_select == 4 && clear_cells[4])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 4 && set_cells[4]),
      .nw     (cell_values[27]),
      .n      (cell_values[28]),
      .ne     (cell_values[29]),
      .e      (cell_values[37]),
      .se     (cell_values[45]),
      .s      (cell_values[44]),
      .sw     (cell_values[43]),
      .w      (cell_values[35]),
      .out    (cell_values[36]),
      .history({history5[36], history4[36], history3[36], history2[36], history1[36]})
  );

  silife_cell cell_4_5 (
      .reset  (reset || (row_select == 4 && clear_cells[5])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 4 && set_cells[5]),
      .nw     (cell_values[28]),
      .n      (cell_values[29]),
      .ne     (cell_values[30]),
      .e      (cell_values[38]),
      .se     (cell_values[46]),
      .s      (cell_values[45]),
      .sw     (cell_values[44]),
      .w      (cell_values[36]),
      .out    (cell_values[37]),
      .history({history5[37], history4[37], history3[37], history2[37], history1[37]})
  );

  silife_cell cell_4_6 (
      .reset  (reset || (row_select == 4 && clear_cells[6])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 4 && set_cells[6]),
      .nw     (cell_values[29]),
      .n      (cell_values[30]),
      .ne     (cell_values[31]),
      .e      (cell_values[39]),
      .se     (cell_values[47]),
      .s      (cell_values[46]),
      .sw     (cell_values[45]),
      .w      (cell_values[37]),
      .out    (cell_values[38]),
      .history({history5[38], history4[38], history3[38], history2[38], history1[38]})
  );

  assign o_e[4] = cell_values[39];
  silife_cell cell_4_7 (
      .reset  (reset || (row_select == 4 && clear_cells[7])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 4 && set_cells[7]),
      .nw     (cell_values[30]),
      .n      (cell_values[31]),
      .ne     (i_e[3]),
      .e      (i_e[4]),
      .se     (i_e[5]),
      .s      (cell_values[47]),
      .sw     (cell_values[46]),
      .w      (cell_values[38]),
      .out    (cell_values[39]),
      .history({history5[39], history4[39], history3[39], history2[39], history1[39]})
  );

  assign o_w[5] = cell_values[40];
  silife_cell cell_5_0 (
      .reset  (reset || (row_select == 5 && clear_cells[0])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 5 && set_cells[0]),
      .nw     (i_w[4]),
      .n      (cell_values[32]),
      .ne     (cell_values[33]),
      .e      (cell_values[41]),
      .se     (cell_values[49]),
      .s      (cell_values[48]),
      .sw     (i_w[6]),
      .w      (i_w[5]),
      .out    (cell_values[40]),
      .history({history5[40], history4[40], history3[40], history2[40], history1[40]})
  );

  silife_cell cell_5_1 (
      .reset  (reset || (row_select == 5 && clear_cells[1])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 5 && set_cells[1]),
      .nw     (cell_values[32]),
      .n      (cell_values[33]),
      .ne     (cell_values[34]),
      .e      (cell_values[42]),
      .se     (cell_values[50]),
      .s      (cell_values[49]),
      .sw     (cell_values[48]),
      .w      (cell_values[40]),
      .out    (cell_values[41]),
      .history({history5[41], history4[41], history3[41], history2[41], history1[41]})
  );

  silife_cell cell_5_2 (
      .reset  (reset || (row_select == 5 && clear_cells[2])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 5 && set_cells[2]),
      .nw     (cell_values[33]),
      .n      (cell_values[34]),
      .ne     (cell_values[35]),
      .e      (cell_values[43]),
      .se     (cell_values[51]),
      .s      (cell_values[50]),
      .sw     (cell_values[49]),
      .w      (cell_values[41]),
      .out    (cell_values[42]),
      .history({history5[42], history4[42], history3[42], history2[42], history1[42]})
  );

  silife_cell cell_5_3 (
      .reset  (reset || (row_select == 5 && clear_cells[3])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 5 && set_cells[3]),
      .nw     (cell_values[34]),
      .n      (cell_values[35]),
      .ne     (cell_values[36]),
      .e      (cell_values[44]),
      .se     (cell_values[52]),
      .s      (cell_values[51]),
      .sw     (cell_values[50]),
      .w      (cell_values[42]),
      .out    (cell_values[43]),
      .history({history5[43], history4[43], history3[43], history2[43], history1[43]})
  );

  silife_cell cell_5_4 (
      .reset  (reset || (row_select == 5 && clear_cells[4])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 5 && set_cells[4]),
      .nw     (cell_values[35]),
      .n      (cell_values[36]),
      .ne     (cell_values[37]),
      .e      (cell_values[45]),
      .se     (cell_values[53]),
      .s      (cell_values[52]),
      .sw     (cell_values[51]),
      .w      (cell_values[43]),
      .out    (cell_values[44]),
      .history({history5[44], history4[44], history3[44], history2[44], history1[44]})
  );

  silife_cell cell_5_5 (
      .reset  (reset || (row_select == 5 && clear_cells[5])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 5 && set_cells[5]),
      .nw     (cell_values[36]),
      .n      (cell_values[37]),
      .ne     (cell_values[38]),
      .e      (cell_values[46]),
      .se     (cell_values[54]),
      .s      (cell_values[53]),
      .sw     (cell_values[52]),
      .w      (cell_values[44]),
      .out    (cell_values[45]),
      .history({history5[45], history4[45], history3[45], history2[45], history1[45]})
  );

  silife_cell cell_5_6 (
      .reset  (reset || (row_select == 5 && clear_cells[6])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 5 && set_cells[6]),
      .nw     (cell_values[37]),
      .n      (cell_values[38]),
      .ne     (cell_values[39]),
      .e      (cell_values[47]),
      .se     (cell_values[55]),
      .s      (cell_values[54]),
      .sw     (cell_values[53]),
      .w      (cell_values[45]),
      .out    (cell_values[46]),
      .history({history5[46], history4[46], history3[46], history2[46], history1[46]})
  );

  assign o_e[5] = cell_values[47];
  silife_cell cell_5_7 (
      .reset  (reset || (row_select == 5 && clear_cells[7])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 5 && set_cells[7]),
      .nw     (cell_values[38]),
      .n      (cell_values[39]),
      .ne     (i_e[4]),
      .e      (i_e[5]),
      .se     (i_e[6]),
      .s      (cell_values[55]),
      .sw     (cell_values[54]),
      .w      (cell_values[46]),
      .out    (cell_values[47]),
      .history({history5[47], history4[47], history3[47], history2[47], history1[47]})
  );

  assign o_w[6] = cell_values[48];
  silife_cell cell_6_0 (
      .reset  (reset || (row_select == 6 && clear_cells[0])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 6 && set_cells[0]),
      .nw     (i_w[5]),
      .n      (cell_values[40]),
      .ne     (cell_values[41]),
      .e      (cell_values[49]),
      .se     (cell_values[57]),
      .s      (cell_values[56]),
      .sw     (i_w[7]),
      .w      (i_w[6]),
      .out    (cell_values[48]),
      .history({history5[48], history4[48], history3[48], history2[48], history1[48]})
  );

  silife_cell cell_6_1 (
      .reset  (reset || (row_select == 6 && clear_cells[1])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 6 && set_cells[1]),
      .nw     (cell_values[40]),
      .n      (cell_values[41]),
      .ne     (cell_values[42]),
      .e      (cell_values[50]),
      .se     (cell_values[58]),
      .s      (cell_values[57]),
      .sw     (cell_values[56]),
      .w      (cell_values[48]),
      .out    (cell_values[49]),
      .history({history5[49], history4[49], history3[49], history2[49], history1[49]})
  );

  silife_cell cell_6_2 (
      .reset  (reset || (row_select == 6 && clear_cells[2])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 6 && set_cells[2]),
      .nw     (cell_values[41]),
      .n      (cell_values[42]),
      .ne     (cell_values[43]),
      .e      (cell_values[51]),
      .se     (cell_values[59]),
      .s      (cell_values[58]),
      .sw     (cell_values[57]),
      .w      (cell_values[49]),
      .out    (cell_values[50]),
      .history({history5[50], history4[50], history3[50], history2[50], history1[50]})
  );

  silife_cell cell_6_3 (
      .reset  (reset || (row_select == 6 && clear_cells[3])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 6 && set_cells[3]),
      .nw     (cell_values[42]),
      .n      (cell_values[43]),
      .ne     (cell_values[44]),
      .e      (cell_values[52]),
      .se     (cell_values[60]),
      .s      (cell_values[59]),
      .sw     (cell_values[58]),
      .w      (cell_values[50]),
      .out    (cell_values[51]),
      .history({history5[51], history4[51], history3[51], history2[51], history1[51]})
  );

  silife_cell cell_6_4 (
      .reset  (reset || (row_select == 6 && clear_cells[4])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 6 && set_cells[4]),
      .nw     (cell_values[43]),
      .n      (cell_values[44]),
      .ne     (cell_values[45]),
      .e      (cell_values[53]),
      .se     (cell_values[61]),
      .s      (cell_values[60]),
      .sw     (cell_values[59]),
      .w      (cell_values[51]),
      .out    (cell_values[52]),
      .history({history5[52], history4[52], history3[52], history2[52], history1[52]})
  );

  silife_cell cell_6_5 (
      .reset  (reset || (row_select == 6 && clear_cells[5])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 6 && set_cells[5]),
      .nw     (cell_values[44]),
      .n      (cell_values[45]),
      .ne     (cell_values[46]),
      .e      (cell_values[54]),
      .se     (cell_values[62]),
      .s      (cell_values[61]),
      .sw     (cell_values[60]),
      .w      (cell_values[52]),
      .out    (cell_values[53]),
      .history({history5[53], history4[53], history3[53], history2[53], history1[53]})
  );

  silife_cell cell_6_6 (
      .reset  (reset || (row_select == 6 && clear_cells[6])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 6 && set_cells[6]),
      .nw     (cell_values[45]),
      .n      (cell_values[46]),
      .ne     (cell_values[47]),
      .e      (cell_values[55]),
      .se     (cell_values[63]),
      .s      (cell_values[62]),
      .sw     (cell_values[61]),
      .w      (cell_values[53]),
      .out    (cell_values[54]),
      .history({history5[54], history4[54], history3[54], history2[54], history1[54]})
  );

  assign o_e[6] = cell_values[55];
  silife_cell cell_6_7 (
      .reset  (reset || (row_select == 6 && clear_cells[7])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 6 && set_cells[7]),
      .nw     (cell_values[46]),
      .n      (cell_values[47]),
      .ne     (i_e[5]),
      .e      (i_e[6]),
      .se     (i_e[7]),
      .s      (cell_values[63]),
      .sw     (cell_values[62]),
      .w      (cell_values[54]),
      .out    (cell_values[55]),
      .history({history5[55], history4[55], history3[55], history2[55], history1[55]})
  );

  assign o_w[7] = cell_values[56];
  assign o_s[0] = cell_values[56];
  silife_cell cell_7_0 (
      .reset  (reset || (row_select == 7 && clear_cells[0])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 7 && set_cells[0]),
      .nw     (i_w[6]),
      .n      (cell_values[48]),
      .ne     (cell_values[49]),
      .e      (cell_values[57]),
      .se     (i_s[1]),
      .s      (i_s[0]),
      .sw     (i_sw),
      .w      (i_w[7]),
      .out    (cell_values[56]),
      .history({history5[56], history4[56], history3[56], history2[56], history1[56]})
  );

  assign o_s[1] = cell_values[57];
  silife_cell cell_7_1 (
      .reset  (reset || (row_select == 7 && clear_cells[1])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 7 && set_cells[1]),
      .nw     (cell_values[48]),
      .n      (cell_values[49]),
      .ne     (cell_values[50]),
      .e      (cell_values[58]),
      .se     (i_s[2]),
      .s      (i_s[1]),
      .sw     (i_s[0]),
      .w      (cell_values[56]),
      .out    (cell_values[57]),
      .history({history5[57], history4[57], history3[57], history2[57], history1[57]})
  );

  assign o_s[2] = cell_values[58];
  silife_cell cell_7_2 (
      .reset  (reset || (row_select == 7 && clear_cells[2])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 7 && set_cells[2]),
      .nw     (cell_values[49]),
      .n      (cell_values[50]),
      .ne     (cell_values[51]),
      .e      (cell_values[59]),
      .se     (i_s[3]),
      .s      (i_s[2]),
      .sw     (i_s[1]),
      .w      (cell_values[57]),
      .out    (cell_values[58]),
      .history({history5[58], history4[58], history3[58], history2[58], history1[58]})
  );

  assign o_s[3] = cell_values[59];
  silife_cell cell_7_3 (
      .reset  (reset || (row_select == 7 && clear_cells[3])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 7 && set_cells[3]),
      .nw     (cell_values[50]),
      .n      (cell_values[51]),
      .ne     (cell_values[52]),
      .e      (cell_values[60]),
      .se     (i_s[4]),
      .s      (i_s[3]),
      .sw     (i_s[2]),
      .w      (cell_values[58]),
      .out    (cell_values[59]),
      .history({history5[59], history4[59], history3[59], history2[59], history1[59]})
  );

  assign o_s[4] = cell_values[60];
  silife_cell cell_7_4 (
      .reset  (reset || (row_select == 7 && clear_cells[4])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 7 && set_cells[4]),
      .nw     (cell_values[51]),
      .n      (cell_values[52]),
      .ne     (cell_values[53]),
      .e      (cell_values[61]),
      .se     (i_s[5]),
      .s      (i_s[4]),
      .sw     (i_s[3]),
      .w      (cell_values[59]),
      .out    (cell_values[60]),
      .history({history5[60], history4[60], history3[60], history2[60], history1[60]})
  );

  assign o_s[5] = cell_values[61];
  silife_cell cell_7_5 (
      .reset  (reset || (row_select == 7 && clear_cells[5])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 7 && set_cells[5]),
      .nw     (cell_values[52]),
      .n      (cell_values[53]),
      .ne     (cell_values[54]),
      .e      (cell_values[62]),
      .se     (i_s[6]),
      .s      (i_s[5]),
      .sw     (i_s[4]),
      .w      (cell_values[60]),
      .out    (cell_values[61]),
      .history({history5[61], history4[61], history3[61], history2[61], history1[61]})
  );

  assign o_s[6] = cell_values[62];
  silife_cell cell_7_6 (
      .reset  (reset || (row_select == 7 && clear_cells[6])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 7 && set_cells[6]),
      .nw     (cell_values[53]),
      .n      (cell_values[54]),
      .ne     (cell_values[55]),
      .e      (cell_values[63]),
      .se     (i_s[7]),
      .s      (i_s[6]),
      .sw     (i_s[5]),
      .w      (cell_values[61]),
      .out    (cell_values[62]),
      .history({history5[62], history4[62], history3[62], history2[62], history1[62]})
  );

  assign o_e[7] = cell_values[63];
  assign o_s[7] = cell_values[63];
  silife_cell cell_7_7 (
      .reset  (reset || (row_select == 7 && clear_cells[7])),
      .clk    (clk),
      .enable (enable),
      .revive (row_select == 7 && set_cells[7]),
      .nw     (cell_values[54]),
      .n      (cell_values[55]),
      .ne     (i_e[6]),
      .e      (i_e[7]),
      .se     (i_se),
      .s      (i_s[7]),
      .sw     (i_s[6]),
      .w      (cell_values[62]),
      .out    (cell_values[63]),
      .history({history5[63], history4[63], history3[63], history2[63], history1[63]})
  );


endmodule
